name: CI — test → release (deploy key)

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

# Ensure only one workflow per ref is active at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Default, least-privilege token permissions; jobs elevate as needed
permissions:
  contents: read

jobs:
  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [22.x, 24.x]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json
          run_install: false
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Format check
        run: pnpm -w run fmt:check
      - name: Lint
        run: pnpm -w run lint:check
      - name: Typecheck (tsgo)
        run: pnpm -w run typecheck:tsgo
      - name: Build (workspace)
        run: pnpm -r build
      - name: Unit tests
        run: pnpm -r test:unit

  determine_release:
    name: Determine release
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      is_prerelease: ${{ steps.determine.outputs.is_prerelease }}
      is_release: ${{ steps.determine.outputs.is_release }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json
          run_install: false
      - name: Setup Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: 24.x
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Compute release flags
        id: determine
        run: |
          # Changesets can error on PR merge refs; tolerate and default to no pre mode
          pnpm changeset status --output=changeset-status.json || echo '{}' > changeset-status.json
          PRE=$(jq -r '.preState.mode // ""' changeset-status.json)
          rm -f changeset-status.json
          echo "is_prerelease=$([[ $PRE = 'pre' ]] && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "is_release=$([[ $GITHUB_REF_NAME = 'main' ]] && echo true || echo false)" >> $GITHUB_OUTPUT

  release:
    name: Release
    needs: [test, determine_release]
    if: ${{ github.event_name == 'push' && (needs.determine_release.outputs.is_release == 'true' || needs.determine_release.outputs.is_prerelease == 'true') }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo (SSH deploy key)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.GHA_DEPLOY_KEY }}
      - name: Configure Git author (for tag/commit)
        run: |
          git config user.name "GitHubActions"
          git config user.email "actions@github.com"
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json
          run_install: false
      - name: Setup Node.js 24 (with npm registry)
        uses: actions/setup-node@v4
        with:
          node-version: 24.x
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
          registry-url: https://registry.npmjs.org
          always-auth: true
        env:
          # Ensure the registry is authenticated for publish
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm build
      - name: Exit prerelease mode if applicable
        if: needs.determine_release.outputs.is_prerelease == 'true'
        run: pnpm changeset pre exit
      - name: Publish with Changesets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pnpm changeset status
          pnpm changeset version
          pnpm changeset publish
          git push --follow-tags --no-verify
