name: Test and Release
on: push

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  test:
    name: Test (Node ${{ matrix.node-version }})
    if: github.event.head_commit.author.name != 'GitHub Actions'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x, 22.x, 24.x]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Install the pnpm CLI first so actions/setup-node can enable pnpm cache without error
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Tests
        run: pnpm test

  determine_release:
    name: Determine release
    runs-on: ubuntu-latest
    outputs:
      is_prerelease: ${{ steps.determine_release.outputs.is_prerelease }}
      is_release: ${{ steps.determine_release.outputs.is_release }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false
      - name: Setup Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: 24.x
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Determine release
        id: determine_release
        run: |
          git status
          pnpm changeset status --output=changeset-status.json
          PRE_RELEASE_MODE=$( cat changeset-status.json | jq -r '.preState.mode' )
          rm changeset-status.json
          IS_PRERELEASE=$( [[ $PRE_RELEASE_MODE = 'pre' ]] && echo 'true' || echo 'false' )
          echo "Is prerelease: $IS_PRERELEASE"
          echo "is_prerelease=$IS_PRERELEASE" >> $GITHUB_OUTPUT
          IS_RELEASE=$( [[ $GITHUB_REF_NAME = 'main' ]] && echo 'true' || echo 'false' )
          echo "Is release: $IS_RELEASE"
          echo "is_release=$IS_RELEASE" >> $GITHUB_OUTPUT
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}

  release:
    name: Release
    needs: [test, determine_release]
    if: needs.determine_release.outputs.is_release == 'true' || needs.determine_release.outputs.is_prerelease == 'true'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: false
      - name: Setup Node.js 24
        uses: actions/setup-node@v4
        with:
          node-version: 24.x
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm build
      - name: Publish packages
        run: |
          if [[ $IS_RELEASE = "true" && $IS_PRERELEASE = "true" ]]
          then
              echo "exiting prerelease mode on main branch"
              pnpm changeset pre exit
              IS_PRERELEASE=false
          fi
          # Publish only; do not attempt to commit or push version bumps here.
          pnpm changeset status
          pnpm changeset publish
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          IS_PRERELEASE: ${{ needs.determine_release.outputs.is_prerelease }}
          IS_RELEASE: ${{ needs.determine_release.outputs.is_release }}
